import { Paginated } from './paginated.object-type';
import { <%= entityClass %>DTO } from '../dto/<%= entityFileName %>.dto';
import { Field, InputType, ObjectType } from '@nestjs/graphql';
<%_ for (const r of relationships) { _%>
import { <%= r.otherEntity.entityClass %> } from './<%= r.otherEntity.entityFileName %>.object-type' %>
<%_ } _%>

<%_
const pkType = getPkType(databaseType) === 'Long' ? 'number' : 'string';
_%>

@ObjectType()
export class <%= entityClass %> extends <%= entityClass %>DTO {
<%_ for (const r of relationships) { _%>
  @Field()
  <%= r.relationshipName %>: <%= r.otherEntity.entityClass %>;
<%_ } _%>
}

@InputType()
export class Create<%= entityClass %>Args extends <%= entityClass %> {}

@InputType()
export class Update<%= entityClass %>Args extends <%= entityClass %> {
  @Field()
  id: <%= pkType %>;
}

@ObjectType()
export class Paginated<%= entityClass %> extends Paginated(<%= entityClass %>) {}
